#
# this dockerfile roughly follows the 'Install ROS2 Via Debian Packages' from:
#   https://index.ros.org/doc/ros2/Installation/Eloquent/Linux-Install-Debians/
#
ARG BASE_IMAGE=dustynv/deepstream:r35.3.1
FROM ${BASE_IMAGE}

ENV ROS_DISTRO=humble
ENV ROS_ROOT=/opt/ros/${ROS_DISTRO}

ENV DEBIAN_FRONTEND=noninteractive

WORKDIR /workspace

# install prerequisite
RUN apt update && \
    apt purge -y *opencv* && \
    apt install -y --no-install-recommends \
        git cmake build-essential \
        curl wget gnupg \
        locales lsb-release software-properties-common \
    && rm -rf /var/lib/apt/lists/*

# change the locale from POSIX to UTF-8
RUN locale-gen en_US en_US.UTF-8 && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
ENV LANG=en_US.UTF-8

# set Python3 as default
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1

# add the ROS deb repo to the apt sources list
RUN wget -qO - https://isaac.download.nvidia.com/isaac-ros/repos.key | sudo apt-key add - && \
    echo 'deb https://isaac.download.nvidia.com/isaac-ros/ubuntu/main focal main' | sudo tee -a /etc/apt/sources.list && \
    curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu focal main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null

RUN apt update && \
    apt install -y --no-install-recommends ros-humble-desktop-full \
        python3-rosdep python3-colcon-common-extensions \
    && rm -rf /var/lib/apt/lists/*

# init/update rosdep
RUN apt update && \
    cd ${ROS_ROOT} && \
    rosdep init && \
    rosdep update && \
    rm -rf /var/lib/apt/lists/*

# setup entrypoint
COPY ./packages/ros_entrypoint.sh /ros_entrypoint.sh
RUN echo 'source ${ROS_ROOT}/setup.bash' >> /root/.bashrc 
RUN chmod +x /ros_entrypoint.sh
ENTRYPOINT ["/ros_entrypoint.sh"]
CMD ["bash"]
WORKDIR /

# 
# PyCUDA
#
RUN cd /opt && \
    git clone --branch=main --depth=1 --recursive https://github.com/inducer/pycuda && \
    cd pycuda && \
    python3 setup.py --verbose build_ext --inplace bdist_wheel && \
    cp dist/pycuda*.whl /opt && \
    rm -rf /opt/pycuda
RUN pip3 install --no-cache-dir --verbose /opt/pycuda*.whl
RUN pip3 show pycuda && python3 -c 'import pycuda; print(pycuda.VERSION_TEXT)'